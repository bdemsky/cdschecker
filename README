****************************************
CDSChecker Readme
****************************************

This is an evaluation-only version of CDSChecker. Please do not distribute.

CDSChecker compiles as a dynamically-linked shared library by simply running
'make'. It should compile on Linux and Mac OSX, and has been tested with LLVM
(clang/clang++) and GCC.

Test programs should use the standard C11/C++11 library headers
(<atomic>/<stdatomic.h>, <mutex>, <condition_variable>, <thread.h>) and must
name their main routine as user_main(int, char**) rather than main(int, char**).
We only support C11 thread syntax (thrd_t, etc. from <thread.h>).

Test programs may also use our included happens-before race detector by
including <librace.h> and utilizing the appropriate functions
(store_{8,16,32,64}() and load_{8,16,32,64}()) for loading/storing data from/to
from non-atomic shared memory.

Test programs should be compiled against our shared library (libmodel.so) using
the headers in the include/ directory. Then the shared library must be made
available to the dynamic linker, using the LD_LIBRARY_PATH environment
variable, for instance.

Sample run instructions:

  make
  export LD_LIBRARY_PATH=.
  # run test program
